package TreeSet;

import java.util.TreeSet;

/**
 * TreeSet 存储自定义对象并保证排序和唯一
 * 
 * a.按什么排序
 * 		自然排序，按年龄大小
 * b.什么情况下唯一
 * 		成员变量值相同
 *
 */
public class TreeSetDemo {
	public static void main(String[] args) {
		TreeSet<Student> ts = new TreeSet<Student>();
		
		Student s1 = new Student("zhangxueyou",27);
		Student s2 = new Student("liudehua",28);
		Student s3 = new Student("zhangguorong",30);
		Student s4 = new Student("liming",32);
		Student s5 = new Student("zhangxueyou",27);
		Student s6 = new Student("guanzhengjie",50);
		Student s7 = new Student("linzixiang",49);
		Student s8 = new Student("zhaoqi",27);
		
		ts.add(s1);
		ts.add(s2);
		ts.add(s3);
		ts.add(s4);
		ts.add(s5);
		ts.add(s6);
		ts.add(s7);
		ts.add(s8);
		
		for(Student s : ts) {
			System.out.println(s.getName()+"---"+s.getAge());
		}
	}
}


package TreeSet;

public class Student implements Comparable<Student> {
	private String name;
	private int age;

	public Student() {
		super();
	}

	public Student(String name, int age) {
		super();
		this.name = name;
		this.age = age;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public int getAge() {
		return age;
	}

	public void setAge(int age) {
		this.age = age;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Student other = (Student) obj;
		if (age != other.age)
			return false;
		if (name == null) {
			if (other.name != null)
				return false;
		} else if (!name.equals(other.name))
			return false;
		return true;
	}

	@Override
	public int compareTo(Student s) {
		// TODO Auto-generated method stub
		// return 0;
		// 按照年龄排序，主要条件
		int num = this.age - s.age;
		// 年龄相同时，要去看姓名是否相同；
		int num2 = num == 0 ? this.name.compareTo(s.name) : num;
		return num2;
	}

}
